{"ast":null,"code":"var _jsxFileName = \"/Users/thanhtuan/Working/2023-CoderSchool/to-do-list/src/components/TaskList.js\";\nimport React from 'react';\nimport TaskItem from './TaskItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction TaskList(_ref) {\n  let {\n    tasks,\n    showIncomplete,\n    setTaskStatus,\n    removeTask,\n    setShowIncomplete\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"task-list\",\n      children: tasks.filter(task => showIncomplete ? task.status !== 1 : true).map(task => /*#__PURE__*/_jsxDEV(TaskItem, {\n        task: task,\n        setTaskStatus: setTaskStatus,\n        removeTask: removeTask\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"filter\",\n        className: \"filter-label\",\n        children: \"Show incompleted task only\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        id: \"filter\",\n        checked: showIncomplete,\n        onChange: e => setShowIncomplete(e.target.checked)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","TaskItem","jsxDEV","_jsxDEV","Fragment","_Fragment","TaskList","_ref","tasks","showIncomplete","setTaskStatus","removeTask","setShowIncomplete","children","className","filter","task","status","map","id","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","checked","onChange","e","target","_c","$RefreshReg$"],"sources":["/Users/thanhtuan/Working/2023-CoderSchool/to-do-list/src/components/TaskList.js"],"sourcesContent":["import React from 'react'\nimport TaskItem from './TaskItem'\n\nfunction TaskList({tasks, showIncomplete, setTaskStatus, removeTask, setShowIncomplete,}) {\n  return (\n    <>\n        <ul className=\"task-list\">\n            {tasks\n            .filter(task => showIncomplete ? task.status !== 1 : true)\n            .map(task => (\n                <TaskItem key={task.id} task={task} setTaskStatus={setTaskStatus} removeTask={removeTask}/>\n            ))}\n        </ul>\n\n        <div className=\"filter-wrapper\">\n        <label htmlFor=\"filter\" className=\"filter-label\">\n            Show incompleted task only\n        </label>\n        <input type=\"checkbox\" id=\"filter\" checked={showIncomplete} onChange={(e) => setShowIncomplete(e.target.checked)}/>\n        </div>\n    </>\n  )\n}\n\nexport default TaskList"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,YAAY;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEjC,SAASC,QAAQA,CAAAC,IAAA,EAAyE;EAAA,IAAxE;IAACC,KAAK;IAAEC,cAAc;IAAEC,aAAa;IAAEC,UAAU;IAAEC;EAAkB,CAAC,GAAAL,IAAA;EACtF,oBACEJ,OAAA,CAAAE,SAAA;IAAAQ,QAAA,gBACIV,OAAA;MAAIW,SAAS,EAAC,WAAW;MAAAD,QAAA,EACpBL,KAAK,CACLO,MAAM,CAACC,IAAI,IAAIP,cAAc,GAAGO,IAAI,CAACC,MAAM,KAAK,CAAC,GAAG,IAAI,CAAC,CACzDC,GAAG,CAACF,IAAI,iBACLb,OAAA,CAACF,QAAQ;QAAee,IAAI,EAAEA,IAAK;QAACN,aAAa,EAAEA,aAAc;QAACC,UAAU,EAAEA;MAAW,GAA1EK,IAAI,CAACG,EAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAoE,CAC7F;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,eAELpB,OAAA;MAAKW,SAAS,EAAC,gBAAgB;MAAAD,QAAA,gBAC/BV,OAAA;QAAOqB,OAAO,EAAC,QAAQ;QAACV,SAAS,EAAC,cAAc;QAAAD,QAAA,EAAC;MAEjD;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACRpB,OAAA;QAAOsB,IAAI,EAAC,UAAU;QAACN,EAAE,EAAC,QAAQ;QAACO,OAAO,EAAEjB,cAAe;QAACkB,QAAQ,EAAGC,CAAC,IAAKhB,iBAAiB,CAACgB,CAAC,CAACC,MAAM,CAACH,OAAO;MAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9G,CAAC;EAAA,eACR,CAAC;AAEP;AAACO,EAAA,GAnBQxB,QAAQ;AAqBjB,eAAeA,QAAQ;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}